// ---------------------------------------------------------------
// Function to handle consuming the breakpoints map
// ---------------------------------------------------------------

@function breakpoint($breakpoint) {
  @return map-get($breakpoints, $breakpoint);
}

// ---------------------------------------------------------------
// General Breakpoint Mixin
// Sets basic breakpoint values as a mixin based on the
// Sass map of breakpoint values in the theme.scss
// @media rule defaults to 'min-width'
//
// Usage:
//    @include breakpoint(l, min-width) {
//        ...
//    }
// ---------------------------------------------------------------

@mixin breakpoint($breakpoint, $rule: min-width) {
  @if $rule == 'min-width' {
    @media only screen and (#{$rule}: breakpoint($breakpoint) + 1) {
      @content;
    }
  } @else {
    @media only screen and (#{$rule}: breakpoint($breakpoint)) {
      @content;
    }
  }
}

// ---------------------------------------------------------------
// Breakpoint Scale Mixin
// Sets a range of breakpoint values as a mixin based on the
// Sass map of breakpoint values in the theme.scss
//
// Usage:
//   @include breakpoint-scale(m, l) {
//     ...
//   }
// ---------------------------------------------------------------

@mixin breakpoint-scale($breakpoint-min, $breakpoint-max, $rule-min-width: min-width, $rule-max-width: max-width) {
  @media only screen and (#{$rule-min-width}: breakpoint($breakpoint-min)) and (#{$rule-max-width}: breakpoint($breakpoint-max)) {
    @content;
  }
}

// ---------------------------------------------------------------
// Orientation Media Query
// Used to apply style to an element only when in landscape Orientation
//
// Usage:
//   @include orientation(landscape) {
//     ...
//   }
// ---------------------------------------------------------------

@mixin orientation($orientation) {
  @media screen and (orientation: $orientation) {
    @content;
  }
}
